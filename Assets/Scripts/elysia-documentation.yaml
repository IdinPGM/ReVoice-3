openapi: 3.0.3
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        image:
          type: string
        createdAt:
          type: date
        updatedAt:
          type: date
        firstName:
          type: string
        lastName:
          type: string
        title:
          type: string
        birthDate:
          type: date
        gender:
          type: string
        role:
          type: string
    Session:
      type: object
      properties:
        id:
          type: string
        expiresAt:
          type: date
        token:
          type: string
        createdAt:
          type: date
        updatedAt:
          type: date
        ipAddress:
          type: string
        userAgent:
          type: string
        userId:
          type: string
    Account:
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        providerId:
          type: string
        userId:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: string
        idToken:
          type: string
        accessTokenExpiresAt:
          type: date
        refreshTokenExpiresAt:
          type: date
        scope:
          type: string
        password:
          type: string
        createdAt:
          type: date
        updatedAt:
          type: date
    Verification:
      type: object
      properties:
        id:
          type: string
        identifier:
          type: string
        value:
          type: string
        expiresAt:
          type: date
        createdAt:
          type: date
        updatedAt:
          type: date
  securitySchemes:
    apiKeyCookie:
      type: apiKey
      in: cookie
      name: apiKeyCookie
      description: API Key authentication via cookie
    bearerAuth:
      type: http
      scheme: bearer
      description: Bearer token authentication
paths:
  /user/manager:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  manager:
                    anyOf:
                      - type: object
                        properties:
                          name:
                            type: string
                          image:
                            anyOf:
                              - type: string
                              - type: "null"
                          firstName:
                            anyOf:
                              - type: string
                              - type: "null"
                          lastName:
                            anyOf:
                              - type: string
                              - type: "null"
                          title:
                            anyOf:
                              - type: string
                              - type: "null"
                        required:
                          - name
                          - image
                          - firstName
                          - lastName
                          - title
                      - type: "null"
                  message:
                    type: string
                required:
                  - manager
                  - message
            multipart/form-data:
              schema:
                type: object
                properties:
                  manager:
                    anyOf:
                      - type: object
                        properties:
                          name:
                            type: string
                          image:
                            anyOf:
                              - type: string
                              - type: "null"
                          firstName:
                            anyOf:
                              - type: string
                              - type: "null"
                          lastName:
                            anyOf:
                              - type: string
                              - type: "null"
                          title:
                            anyOf:
                              - type: string
                              - type: "null"
                        required:
                          - name
                          - image
                          - firstName
                          - lastName
                          - title
                      - type: "null"
                  message:
                    type: string
                required:
                  - manager
                  - message
            text/plain:
              schema:
                type: object
                properties:
                  manager:
                    anyOf:
                      - type: object
                        properties:
                          name:
                            type: string
                          image:
                            anyOf:
                              - type: string
                              - type: "null"
                          firstName:
                            anyOf:
                              - type: string
                              - type: "null"
                          lastName:
                            anyOf:
                              - type: string
                              - type: "null"
                          title:
                            anyOf:
                              - type: string
                              - type: "null"
                        required:
                          - name
                          - image
                          - firstName
                          - lastName
                          - title
                      - type: "null"
                  message:
                    type: string
                required:
                  - manager
                  - message
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      operationId: getUserManager
  /user/streak:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  streak:
                    type: object
                    properties:
                      currentStreak:
                        type: number
                      longestStreak:
                        type: number
                      streakStartDate:
                        anyOf:
                          - anyOf:
                              - type: Date
                              - format: date-time
                                type: string
                              - format: date
                                type: string
                              - type: number
                          - type: "null"
                      lastActivityDate:
                        anyOf:
                          - anyOf:
                              - type: Date
                              - format: date-time
                                type: string
                              - format: date
                                type: string
                              - type: number
                          - type: "null"
                      totalDaysPlayed:
                        type: number
                    required:
                      - currentStreak
                      - longestStreak
                      - streakStartDate
                      - lastActivityDate
                      - totalDaysPlayed
                required:
                  - streak
            multipart/form-data:
              schema:
                type: object
                properties:
                  streak:
                    type: object
                    properties:
                      currentStreak:
                        type: number
                      longestStreak:
                        type: number
                      streakStartDate:
                        anyOf:
                          - anyOf:
                              - type: Date
                              - format: date-time
                                type: string
                              - format: date
                                type: string
                              - type: number
                          - type: "null"
                      lastActivityDate:
                        anyOf:
                          - anyOf:
                              - type: Date
                              - format: date-time
                                type: string
                              - format: date
                                type: string
                              - type: number
                          - type: "null"
                      totalDaysPlayed:
                        type: number
                    required:
                      - currentStreak
                      - longestStreak
                      - streakStartDate
                      - lastActivityDate
                      - totalDaysPlayed
                required:
                  - streak
            text/plain:
              schema:
                type: object
                properties:
                  streak:
                    type: object
                    properties:
                      currentStreak:
                        type: number
                      longestStreak:
                        type: number
                      streakStartDate:
                        anyOf:
                          - anyOf:
                              - type: Date
                              - format: date-time
                                type: string
                              - format: date
                                type: string
                              - type: number
                          - type: "null"
                      lastActivityDate:
                        anyOf:
                          - anyOf:
                              - type: Date
                              - format: date-time
                                type: string
                              - format: date
                                type: string
                              - type: number
                          - type: "null"
                      totalDaysPlayed:
                        type: number
                    required:
                      - currentStreak
                      - longestStreak
                      - streakStartDate
                      - lastActivityDate
                      - totalDaysPlayed
                required:
                  - streak
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      operationId: getUserStreak
  /user/daily-mission:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  dailyMission:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        questType:
                          type: string
                        questDate:
                          anyOf:
                            - type: Date
                            - format: date-time
                              type: string
                            - format: date
                              type: string
                            - type: number
                        targetCount:
                          type: number
                        currentCount:
                          type: number
                        isCompleted:
                          type: boolean
                        points:
                          type: number
                      required:
                        - id
                        - questType
                        - questDate
                        - targetCount
                        - currentCount
                        - isCompleted
                        - points
                required:
                  - dailyMission
            multipart/form-data:
              schema:
                type: object
                properties:
                  dailyMission:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        questType:
                          type: string
                        questDate:
                          anyOf:
                            - type: Date
                            - format: date-time
                              type: string
                            - format: date
                              type: string
                            - type: number
                        targetCount:
                          type: number
                        currentCount:
                          type: number
                        isCompleted:
                          type: boolean
                        points:
                          type: number
                      required:
                        - id
                        - questType
                        - questDate
                        - targetCount
                        - currentCount
                        - isCompleted
                        - points
                required:
                  - dailyMission
            text/plain:
              schema:
                type: object
                properties:
                  dailyMission:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        questType:
                          type: string
                        questDate:
                          anyOf:
                            - type: Date
                            - format: date-time
                              type: string
                            - format: date
                              type: string
                            - type: number
                        targetCount:
                          type: number
                        currentCount:
                          type: number
                        isCompleted:
                          type: boolean
                        points:
                          type: number
                      required:
                        - id
                        - questType
                        - questDate
                        - targetCount
                        - currentCount
                        - isCompleted
                        - points
                required:
                  - dailyMission
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      operationId: getUserDaily-mission
  /user/history:
    get:
      parameters:
        - schema:
            type: number
            default: 1
          in: query
          name: page
          required: true
        - schema:
            type: number
            default: 10
          in: query
          name: limit
          required: true
      operationId: getUserHistory
      responses:
        "200": {}
  /game/main-levels:
    get:
      parameters:
        - schema:
            type: number
            default: 1
          in: query
          name: page
          required: true
        - schema:
            type: number
            default: 10
          in: query
          name: limit
          required: true
        - schema:
            type: string
          in: query
          name: type
          required: false
        - schema:
            type: string
          in: query
          name: subtype
          required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  levels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        subtype:
                          anyOf:
                            - type: string
                            - type: "null"
                        name:
                          type: string
                        description:
                          type: string
                      required:
                        - id
                        - type
                        - subtype
                        - name
                        - description
                  page:
                    type: number
                  limit:
                    type: number
                  total:
                    type: number
                  hasMore:
                    type: boolean
                required:
                  - levels
                  - page
                  - limit
                  - total
                  - hasMore
            multipart/form-data:
              schema:
                type: object
                properties:
                  levels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        subtype:
                          anyOf:
                            - type: string
                            - type: "null"
                        name:
                          type: string
                        description:
                          type: string
                      required:
                        - id
                        - type
                        - subtype
                        - name
                        - description
                  page:
                    type: number
                  limit:
                    type: number
                  total:
                    type: number
                  hasMore:
                    type: boolean
                required:
                  - levels
                  - page
                  - limit
                  - total
                  - hasMore
            text/plain:
              schema:
                type: object
                properties:
                  levels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        subtype:
                          anyOf:
                            - type: string
                            - type: "null"
                        name:
                          type: string
                        description:
                          type: string
                      required:
                        - id
                        - type
                        - subtype
                        - name
                        - description
                  page:
                    type: number
                  limit:
                    type: number
                  total:
                    type: number
                  hasMore:
                    type: boolean
                required:
                  - levels
                  - page
                  - limit
                  - total
                  - hasMore
      operationId: getGameMain-levels
  /game/custom-levels:
    get:
      parameters:
        - schema:
            type: number
            default: 1
          in: query
          name: page
          required: true
        - schema:
            type: number
            default: 10
          in: query
          name: limit
          required: true
        - schema:
            type: string
          in: query
          name: type
          required: false
        - schema:
            type: string
          in: query
          name: subtype
          required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  levels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        type:
                          type: string
                        subtype:
                          anyOf:
                            - type: string
                            - type: "null"
                      required:
                        - id
                        - name
                        - description
                        - type
                        - subtype
                  page:
                    type: number
                  limit:
                    type: number
                  total:
                    type: number
                  hasMore:
                    type: boolean
                required:
                  - levels
                  - page
                  - limit
                  - total
                  - hasMore
            multipart/form-data:
              schema:
                type: object
                properties:
                  levels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        type:
                          type: string
                        subtype:
                          anyOf:
                            - type: string
                            - type: "null"
                      required:
                        - id
                        - name
                        - description
                        - type
                        - subtype
                  page:
                    type: number
                  limit:
                    type: number
                  total:
                    type: number
                  hasMore:
                    type: boolean
                required:
                  - levels
                  - page
                  - limit
                  - total
                  - hasMore
            text/plain:
              schema:
                type: object
                properties:
                  levels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        type:
                          type: string
                        subtype:
                          anyOf:
                            - type: string
                            - type: "null"
                      required:
                        - id
                        - name
                        - description
                        - type
                        - subtype
                  page:
                    type: number
                  limit:
                    type: number
                  total:
                    type: number
                  hasMore:
                    type: boolean
                required:
                  - levels
                  - page
                  - limit
                  - total
                  - hasMore
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      operationId: getGameCustom-levels
  /game/session/start:
    post:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                  stage:
                    type: array
                    items:
                      type: object
                      properties:
                        number:
                          type: number
                        target:
                          type: string
                        description:
                          type: string
                        image:
                          type: string
                      required:
                        - number
                        - target
                        - description
                        - image
                required:
                  - sessionId
                  - stage
            multipart/form-data:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                  stage:
                    type: array
                    items:
                      type: object
                      properties:
                        number:
                          type: number
                        target:
                          type: string
                        description:
                          type: string
                        image:
                          type: string
                      required:
                        - number
                        - target
                        - description
                        - image
                required:
                  - sessionId
                  - stage
            text/plain:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                  stage:
                    type: array
                    items:
                      type: object
                      properties:
                        number:
                          type: number
                        target:
                          type: string
                        description:
                          type: string
                        image:
                          type: string
                      required:
                        - number
                        - target
                        - description
                        - image
                required:
                  - sessionId
                  - stage
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      operationId: postGameSessionStart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                levelId:
                  type: string
                isCustom:
                  type: boolean
              required:
                - levelId
                - isCustom
          multipart/form-data:
            schema:
              type: object
              properties:
                levelId:
                  type: string
                isCustom:
                  type: boolean
              required:
                - levelId
                - isCustom
          text/plain:
            schema:
              type: object
              properties:
                levelId:
                  type: string
                isCustom:
                  type: boolean
              required:
                - levelId
                - isCustom
  /game/session/forward:
    post:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  isPassed:
                    type: boolean
                  inputValue:
                    type: string
                  feedback:
                    anyOf:
                      - type: string
                      - type: "null"
                required:
                  - isPassed
                  - inputValue
                  - feedback
            multipart/form-data:
              schema:
                type: object
                properties:
                  isPassed:
                    type: boolean
                  inputValue:
                    type: string
                  feedback:
                    anyOf:
                      - type: string
                      - type: "null"
                required:
                  - isPassed
                  - inputValue
                  - feedback
            text/plain:
              schema:
                type: object
                properties:
                  isPassed:
                    type: boolean
                  inputValue:
                    type: string
                  feedback:
                    anyOf:
                      - type: string
                      - type: "null"
                required:
                  - isPassed
                  - inputValue
                  - feedback
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      operationId: postGameSessionForward
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                stageNumber:
                  type: number
                threshold:
                  type: number
                value:
                  default: File
                  type: string
                  format: binary
              required:
                - sessionId
                - stageNumber
                - value
          multipart/form-data:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                stageNumber:
                  type: number
                threshold:
                  type: number
                value:
                  default: File
                  type: string
                  format: binary
              required:
                - sessionId
                - stageNumber
                - value
          text/plain:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                stageNumber:
                  type: number
                threshold:
                  type: number
                value:
                  default: File
                  type: string
                  format: binary
              required:
                - sessionId
                - stageNumber
                - value
  /game/session/end:
    post:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
            multipart/form-data:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
            text/plain:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            multipart/form-data:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
            text/plain:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      operationId: postGameSessionEnd
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
              required:
                - sessionId
          multipart/form-data:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
              required:
                - sessionId
          text/plain:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
              required:
                - sessionId
  /:
    get:
      operationId: getIndex
      responses:
        "200": {}
  /auth/api/sign-in/social:
    post:
      tags:
        - Better Auth
      description: Sign in with a social provider
      operationId: socialSignIn
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                callbackURL:
                  type: string
                  description: Callback URL to redirect to after the user has signed in
                newUserCallbackURL:
                  type: string
                errorCallbackURL:
                  type: string
                  description: Callback URL to redirect to if an error happens
                provider:
                  type: string
                disableRedirect:
                  type: string
                  description: Disable automatic redirection to the provider. Useful for handling
                    the redirection yourself
                idToken:
                  type: string
                  description: ID token from the provider to sign in the user with id token
                scopes:
                  type: string
                  description: Array of scopes to request from the provider. This will override
                    the default scopes passed.
                requestSignUp:
                  type: string
                  description: Explicitly request sign-up. Useful when disableImplicitSignUp is
                    true for this provider
                loginHint:
                  type: string
                  description: The login hint to use for the authorization code request
              required:
                - provider
      responses:
        "200":
          description: Success - Returns either session details or redirect URL
          content:
            application/json:
              schema:
                type: object
                description: Session response when idToken is provided
                properties:
                  redirect:
                    type: boolean
                    enum:
                      - false
                  token:
                    type: string
                    description: Session token
                    url:
                      type: "null"
                      nullable: true
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                        name:
                          type: string
                          nullable: true
                        image:
                          type: string
                          nullable: true
                        emailVerified:
                          type: boolean
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                      required:
                        - id
                        - email
                        - emailVerified
                        - createdAt
                        - updatedAt
                required:
                  - redirect
                  - token
                  - user
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/get-session:
    get:
      tags:
        - Better Auth
      description: Get the current session
      security:
        - bearerAuth: []
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    $ref: "#/components/schemas/Session"
                  user:
                    $ref: "#/components/schemas/User"
                required:
                  - session
                  - user
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/sign-out:
    post:
      tags:
        - Better Auth
      description: Sign out the current user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/sign-up/email:
    post:
      tags:
        - Better Auth
      description: Sign up a user using email and password
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
                callbackURL:
                  type: string
                  description: The URL to use for email verification callback
              required:
                - name
                - email
                - password
      responses:
        "200":
          description: Successfully created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    nullable: true
                    description: Authentication token for the session
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The unique identifier of the user
                      email:
                        type: string
                        format: email
                        description: The email address of the user
                      name:
                        type: string
                        description: The name of the user
                      image:
                        type: string
                        format: uri
                        nullable: true
                        description: The profile image URL of the user
                      emailVerified:
                        type: boolean
                        description: Whether the email has been verified
                      createdAt:
                        type: string
                        format: date-time
                        description: When the user was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: When the user was last updated
                    required:
                      - id
                      - email
                      - name
                      - emailVerified
                      - createdAt
                      - updatedAt
                required:
                  - user
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/sign-in/email:
    post:
      tags:
        - Better Auth
      description: Sign in with email and password
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email of the user
                password:
                  type: string
                  description: Password of the user
                callbackURL:
                  type: string
                  description: Callback URL to use as a redirect for email verification
                rememberMe:
                  type: string
                  description: If this is false, the session will not be remembered. Default is
                    `true`.
              required:
                - email
                - password
      responses:
        "200":
          description: Success - Returns either session details or redirect URL
          content:
            application/json:
              schema:
                type: object
                description: Session response when idToken is provided
                properties:
                  redirect:
                    type: boolean
                    enum:
                      - false
                  token:
                    type: string
                    description: Session token
                  url:
                    type: "null"
                    nullable: true
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                        nullable: true
                      image:
                        type: string
                        nullable: true
                      emailVerified:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                    required:
                      - id
                      - email
                      - emailVerified
                      - createdAt
                      - updatedAt
                required:
                  - redirect
                  - token
                  - user
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/forget-password:
    post:
      tags:
        - Better Auth
      description: Send a password reset email to the user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user to send a password reset email to
                redirectTo:
                  type: string
                  description: The URL to redirect the user to reset their password. If the token
                    isn't valid or expired, it'll be redirected with a query
                    parameter `?error=INVALID_TOKEN`. If the token is valid,
                    it'll be redirected with a query parameter
                    `?token=VALID_TOKEN
              required:
                - email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/reset-password:
    post:
      tags:
        - Better Auth
      description: Reset the password for a user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  description: The new password to set
                token:
                  type: string
                  description: The token to reset the password
              required:
                - newPassword
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/verify-email:
    get:
      tags:
        - Better Auth
      description: Verify the email of the user
      security:
        - bearerAuth: []
      parameters:
        - name: token
          in: query
          description: The token to verify the email
          required: true
          schema:
            type: string
        - name: callbackURL
          in: query
          description: The URL to redirect to after email verification
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                      email:
                        type: string
                        description: User email
                      name:
                        type: string
                        description: User name
                      image:
                        type: string
                        description: User image URL
                      emailVerified:
                        type: boolean
                        description: Indicates if the user email is verified
                      createdAt:
                        type: string
                        description: User creation date
                      updatedAt:
                        type: string
                        description: User update date
                    required:
                      - id
                      - email
                      - name
                      - image
                      - emailVerified
                      - createdAt
                      - updatedAt
                  status:
                    type: boolean
                    description: Indicates if the email was verified successfully
                required:
                  - user
                  - status
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/send-verification-email:
    post:
      tags:
        - Better Auth
      description: Send a verification email to the user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email to send the verification email to
                  example: user@example.com
                callbackURL:
                  type: string
                  description: The URL to use for email verification callback
                  example: https://example.com/callback
                  nullable: true
              required:
                - email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates if the email was sent successfully
                    example: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Verification email isn't enabled
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/change-email:
    post:
      tags:
        - Better Auth
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newEmail:
                  type: string
                  description: The new email to set
                callbackURL:
                  type: string
                  description: The URL to redirect to after email verification
              required:
                - newEmail
      responses:
        "200":
          description: Email change request processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates if the request was successful
                  message:
                    type: string
                    enum:
                      - Email updated
                      - Verification email sent
                    description: Status message of the email change process
                    nullable: true
                required:
                  - status
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/change-password:
    post:
      tags:
        - Better Auth
      description: Change the password of the user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  description: The new password to set
                currentPassword:
                  type: string
                  description: The current password
                revokeOtherSessions:
                  type: string
                  description: Revoke all other sessions
              required:
                - newPassword
                - currentPassword
      responses:
        "200":
          description: Password successfully changed
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    nullable: true
                    description: New session token if other sessions were revoked
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The unique identifier of the user
                      email:
                        type: string
                        format: email
                        description: The email address of the user
                      name:
                        type: string
                        description: The name of the user
                      image:
                        type: string
                        format: uri
                        nullable: true
                        description: The profile image URL of the user
                      emailVerified:
                        type: boolean
                        description: Whether the email has been verified
                      createdAt:
                        type: string
                        format: date-time
                        description: When the user was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: When the user was last updated
                    required:
                      - id
                      - email
                      - name
                      - emailVerified
                      - createdAt
                      - updatedAt
                required:
                  - user
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/update-user:
    post:
      tags:
        - Better Auth
      description: Update the current user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user
                image:
                  type: string
                  description: The image of the user
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates if the update was successful
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/delete-user:
    post:
      tags:
        - Better Auth
      description: Delete the user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                callbackURL:
                  type: string
                password:
                  type: string
                token:
                  type: string
              required: []
      responses:
        "200":
          description: User deletion processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful
                  message:
                    type: string
                    enum:
                      - User deleted
                      - Verification email sent
                    description: Status message of the deletion process
                required:
                  - success
                  - message
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/reset-password/{token}:
    get:
      tags:
        - Better Auth
      description: Redirects the user to the callback URL with the token
      security:
        - bearerAuth: []
      parameters:
        - name: callbackURL
          in: query
          schema:
            type: string
            description: The URL to redirect the user to reset their password
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/request-password-reset:
    post:
      tags:
        - Better Auth
      description: Send a password reset email to the user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user to send a password reset email to
                redirectTo:
                  type: string
                  description: The URL to redirect the user to reset their password. If the token
                    isn't valid or expired, it'll be redirected with a query
                    parameter `?error=INVALID_TOKEN`. If the token is valid,
                    it'll be redirected with a query parameter
                    `?token=VALID_TOKEN
              required:
                - email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/list-sessions:
    get:
      tags:
        - Better Auth
      description: List all active sessions for the user
      security:
        - bearerAuth: []
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Session"
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/revoke-session:
    post:
      tags:
        - Better Auth
      description: Revoke a single session
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The token to revoke
              required:
                - token
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates if the session was revoked successfully
                required:
                  - status
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/revoke-sessions:
    post:
      tags:
        - Better Auth
      description: Revoke all sessions for the user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates if all sessions were revoked successfully
                required:
                  - status
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/revoke-other-sessions:
    post:
      tags:
        - Better Auth
      description: Revoke all other sessions for the user except the current one
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates if all other sessions were revoked successfully
                required:
                  - status
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/link-social:
    post:
      tags:
        - Better Auth
      description: Link a social account to the user
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                callbackURL:
                  type: string
                  description: The URL to redirect to after the user has signed in
                provider:
                  type: string
                idToken:
                  type: string
                requestSignUp:
                  type: string
                scopes:
                  type: string
                  description: Additional scopes to request from the provider
                errorCallbackURL:
                  type: string
                  description: The URL to redirect to if there is an error during the link process
              required:
                - provider
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: The authorization URL to redirect the user to
                  redirect:
                    type: boolean
                    description: Indicates if the user should be redirected to the authorization URL
                  status:
                    type: boolean
                required:
                  - redirect
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/list-accounts:
    get:
      tags:
        - Better Auth
      description: List all accounts linked to the user
      security:
        - bearerAuth: []
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    provider:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                  accountId:
                    type: string
                  scopes:
                    type: array
                    items:
                      type: string
                required:
                  - id
                  - provider
                  - createdAt
                  - updatedAt
                  - accountId
                  - scopes
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/delete-user/callback:
    get:
      tags:
        - Better Auth
      description: Callback to complete user deletion with verification token
      security:
        - bearerAuth: []
      parameters:
        - name: token
          in: query
          schema:
            type: string
        - name: callbackURL
          in: query
          schema:
            type: string
      responses:
        "200":
          description: User successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the deletion was successful
                  message:
                    type: string
                    enum:
                      - User deleted
                    description: Confirmation message
                required:
                  - success
                  - message
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/unlink-account:
    post:
      tags:
        - Better Auth
      description: Unlink an account
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                providerId:
                  type: string
                accountId:
                  type: string
              required:
                - providerId
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/refresh-token:
    post:
      tags:
        - Better Auth
      description: Refresh the access token using a refresh token
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                providerId:
                  type: string
                  description: The provider ID for the OAuth provider
                accountId:
                  type: string
                  description: The account ID associated with the refresh token
                userId:
                  type: string
                  description: The user ID associated with the account
              required:
                - providerId
      responses:
        "200":
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokenType:
                    type: string
                  idToken:
                    type: string
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  accessTokenExpiresAt:
                    type: string
                    format: date-time
                  refreshTokenExpiresAt:
                    type: string
                    format: date-time
        "400":
          description: Invalid refresh token or provider configuration
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/get-access-token:
    post:
      tags:
        - Better Auth
      description: Get a valid access token, doing a refresh if needed
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                providerId:
                  type: string
                  description: The provider ID for the OAuth provider
                accountId:
                  type: string
                  description: The account ID associated with the refresh token
                userId:
                  type: string
                  description: The user ID associated with the account
              required:
                - providerId
      responses:
        "200":
          description: A Valid access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokenType:
                    type: string
                  idToken:
                    type: string
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  accessTokenExpiresAt:
                    type: string
                    format: date-time
                  refreshTokenExpiresAt:
                    type: string
                    format: date-time
        "400":
          description: Invalid refresh token or provider configuration
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/account-info:
    post:
      tags:
        - Better Auth
      description: Get the account info provided by the provider
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  type: string
                  description: The provider given account id for which to get the account info
              required:
                - accountId
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      image:
                        type: string
                      emailVerified:
                        type: boolean
                    required:
                      - id
                      - emailVerified
                  data:
                    type: object
                    properties: {}
                    additionalProperties: true
                required:
                  - user
                  - data
                additionalProperties: false
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/ok:
    get:
      tags:
        - Better Auth
      description: Check if the API is working
      security:
        - bearerAuth: []
      parameters: []
      responses:
        "200":
          description: API is working
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    description: Indicates if the API is working
                required:
                  - ok
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
  /auth/api/error:
    get:
      tags:
        - Better Auth
      description: Displays an error page
      security:
        - bearerAuth: []
      parameters: []
      responses:
        "200":
          description: Success
          content:
            text/html:
              schema:
                type: string
                description: The HTML content of the error page
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Bad Request. Usually due to missing parameters, or invalid
            parameters.
        "401":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          description: Unauthorized. Due to missing or invalid authentication.
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Forbidden. You do not have permission to access this resource or to
            perform this action.
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Not Found. The requested resource was not found.
        "429":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Too Many Requests. You have exceeded the rate limit. Try again later.
        "500":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: Internal Server Error. This is a problem with the server that you
            cannot fix.
info:
  title: Elysia Documentation
  description: Development documentation
  version: 0.0.0
